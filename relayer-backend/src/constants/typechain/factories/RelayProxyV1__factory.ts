/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RelayProxyV1, RelayProxyV1Interface } from "../RelayProxyV1";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "_amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_module",
            type: "address",
          },
          {
            internalType: "address",
            name: "_inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "_witness",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "_data",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "_secret",
            type: "bytes32",
          },
        ],
        internalType: "struct RelayProxyV1.GelatoLimitOrder",
        name: "limitOrderData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "holder",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "allowed",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct RelayProxyV1.DaiApprovalPermit",
        name: "permit",
        type: "tuple",
      },
      {
        internalType: "contract Dai",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract ERC20OrderRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "relayLimitOrderWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610654806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c0d9777814610030575b600080fd5b61004361003e366004610428565b610045565b005b825160208401516040808601516060870151608088015160a089015160c08a015160e08b015195516323f2ebc360e21b81526001600160a01b0398891660048201529688166024880152604487019490945260648601929092521515608485015260ff1660a484015260c483015260e482015290831690638fcbaf0c9061010401600060405180830381600087803b1580156100e057600080fd5b505af11580156100f4573d6000803e3d6000fd5b5050855160405163095ea7b360e01b81526001600160a01b0385811660048301526024820192909252908516925063095ea7b39150604401602060405180830381600087803b15801561014657600080fd5b505af115801561015a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017e9190610404565b50825184516040516323b872dd60e01b81526001600160a01b0392831660048201523060248201526044810191909152908316906323b872dd90606401602060405180830381600087803b1580156101d557600080fd5b505af11580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610404565b50806001600160a01b031663486046a8856000015186602001518760400151886060015189608001518a60a001518b60c001516040518863ffffffff1660e01b81526004016102629796959493929190610525565b600060405180830381600087803b15801561027c57600080fd5b505af1158015610290573d6000803e3d6000fd5b5050505050505050565b80356102a5816105f8565b919050565b80356102a581610610565b600082601f8301126102c657600080fd5b813567ffffffffffffffff808211156102e1576102e16105e2565b604051601f8301601f19908116603f01168101908282118183101715610309576103096105e2565b8160405283815286602085880101111561032257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600061010080838503121561035657600080fd5b6040519081019067ffffffffffffffff82118183101715610379576103796105e2565b816040528092508335915061038d826105f8565b81815261039c6020850161029a565b602082015260408401356040820152606084013560608201526103c1608085016102aa565b60808201526103d260a085016103f3565b60a082015260c084013560c082015260e084013560e0820152505092915050565b803560ff811681146102a557600080fd5b60006020828403121561041657600080fd5b815161042181610610565b9392505050565b600080600080610160858703121561043f57600080fd5b843567ffffffffffffffff8082111561045757600080fd5b9086019060e0828903121561046b57600080fd5b6104736105b9565b823581526104836020840161029a565b60208201526104946040840161029a565b60408201526104a56060840161029a565b60608201526104b66080840161029a565b608082015260a0830135828111156104cd57600080fd5b6104d98a8286016102b5565b60a08301525060c083013560c08201528096505050506104fc8660208701610342565b925061050b610120860161029a565b915061051a610140860161029a565b905092959194509250565b8781526000602060018060a01b03808a16828501528089166040850152808816606085015280871660808501525060e060a084015284518060e085015260005b818110156105825786810183015185820161010001528201610565565b8181111561059557600061010083870101525b5060c08401949094525050601f91909101601f191601610100019695505050505050565b60405160e0810167ffffffffffffffff811182821017156105dc576105dc6105e2565b60405290565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461060d57600080fd5b50565b801515811461060d57600080fdfea2646970667358221220e56a3bf9afcf63c48c734450ff82e01482cc126096dfed31f9e0731127ed30e764736f6c63430008070033";

export class RelayProxyV1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RelayProxyV1> {
    return super.deploy(overrides || {}) as Promise<RelayProxyV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RelayProxyV1 {
    return super.attach(address) as RelayProxyV1;
  }
  connect(signer: Signer): RelayProxyV1__factory {
    return super.connect(signer) as RelayProxyV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayProxyV1Interface {
    return new utils.Interface(_abi) as RelayProxyV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayProxyV1 {
    return new Contract(address, _abi, signerOrProvider) as RelayProxyV1;
  }
}
